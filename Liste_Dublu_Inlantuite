#include <stdio.h>
#include <stdlib.h>
typedef struct node
{
    int val;
    struct node *prev;
    struct node *next;
};
void adstart(struct node **head,int val)
{
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->val=val;
    newnode->next=NULL;
    newnode->prev=NULL;
    if(*head==NULL)
    {
        *head=newnode;
    }
    else
    {
        (*head)->prev=newnode;
        newnode->next=*head;
        *head=newnode;
    }
}
void adend(struct node **head,int val)
{
    struct node *newnode,*last;
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->val=val;
    newnode->next=NULL;
    newnode->prev=NULL;
    if(*head==NULL)
    {
        *head=newnode;
    }
    else
    {
        last=*head;
        while(last->next!=NULL)
            last=last->next;
        last->next=newnode;
        newnode->prev=last;
    }
}
void adonpoz(struct node **head,int poz, int val)
{
    int i;
    struct node *newnode,*temp;
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->val=val;
    newnode->next=NULL;
    newnode->prev=NULL;
    if(*head==NULL)
    {
        *head=newnode;
    }
    else
    {
        if(poz==1)
        {
            (*head)->prev=newnode;
            newnode->next=*head;
            *head=newnode;
        }
        else
        {
            temp=*head;
            i=1;
            while(i<poz-1 && temp!=NULL)
            {
                temp = temp->next;
                i++;
            }
            if(temp!=NULL)
            {
                newnode->next=temp->next;
                newnode->prev=temp;
            }
            if(temp->next !=NULL)
            {
                temp->next->prev = newnode;
            }
            temp->next = newnode;
        }
    }
}
void delstart(struct node **head)
{
    struct node *del;
    if(*head==NULL)
        printf("Lista este goala!\n");
    else
    {
        if((*head)->next==NULL)
        {
            del=(*head);
            (*head)=NULL;
            free(del);
        }
        else
        {
            del=*head;
            (*head)=(*head)->next;
            if((*head)->next !=NULL)
                (*head)->prev=NULL;
            free(del);
        }
    }
}
void delend(struct node **head)
{
    struct node *del;
    if(*head==NULL)
    {
        printf("Lista este deja goala!\n");
    }
    else
    {
        if((*head)->next==NULL)
        {
            *head=NULL;
        }
        else
        {
            struct node *temp=*head;
            while(temp->next->next!=NULL)
            {
                temp=temp->next;
            }
            struct node *del=temp->next;
            temp->next=NULL;
            free(del);
        }
    }
}
void delfrompoz(struct node** head, int poz)
{
    if(poz < 1)
    {
        printf("Pozitie invalida!\n");
    }
    else if (poz == 1 && *head != NULL)
    {
        struct node* del = *head;
        *head = (*head)->next;
        free(del);
    }
    else
    {
        struct node *temp;
        temp = *head;
        for(int i = 1; i < poz-1; i++)
        {
            if(temp != NULL)
            {
                temp = temp->next;
            }
        }
        if(temp != NULL && temp->next != NULL)
        {
            struct node* del = temp->next;
            temp->next = temp->next->next;
            free(del);
        }
        else
        {
            printf("Pozitie invalida!\n");
        }
    }
}
void print(struct node *head)
{
    struct node *prt=head;
    if(head == NULL)
    {
        printf("Lista este goala!\n");
    }
    else
    {
        while(prt!=NULL)
        {
            printf("%d ",prt->val);
            prt=prt->next;
        }
    }
}
void del_list(struct node **head)
{
    struct node *del;
    while (*head != NULL)
    {
        del = *head;
        *head = (*head)->next;
        free(del);
    }
}
void nr_nod(struct node *head)
{
    int nr=0;
    struct node*parc=head;
    while(parc!=NULL)
    {
        parc=parc->next;
        nr++;
    }
    printf("%d\n",nr);
}
void inv_list(struct node **head)
{
     struct node *temp = NULL;
     struct node *current = *head;
     while (current !=  NULL)
     {
       temp = current->prev;
       current->prev = current->next;
       current->next = temp;
       current = current->prev;
     }
     if(temp != NULL )
        *head = temp->prev;
}
int main()
{
    struct node *head=NULL;
    int n,val;
    scanf("%d",&n);

    ///adaugam in fata listei
    /*for(int i=0;i<n;i++)
    {
        scanf("%d",&val);
        adstart(&head,val);
    }*/
    ///

    ///adaugam la finalul listei
    for(int i=0; i<n; i++)
    {
        scanf("%d",&val);
        adend(&head,val);
    }
    ///

    ///adaugam pe o pozitie data
    /*for(int i=0; i<n; i++)
    {
        int poz;
        scanf("%d",&poz);
        scanf("%d",&val);
        adonpoz(&head,poz,val);
    }*/
    ///

    ///stergem de la inceputul listei
    //delstart(&head);
    ///

    ///stergem de la sfarsitul listei
    //delend(&head);
    ///

    ///stergem de la pozitie data
    /*int poz;
    scanf("%d",&poz);
    delfrompoz(&head,poz);*/
    ///

    ///stergem lista
    //del_list(&head);
    ///

    ///afisam nr de noduri
    //nr_nod(head);
    ///

    ///inversam lista
    //inv_list(&head);
    ///

    ///afisam lista
    print(head);
    ///
    return 0;
}
